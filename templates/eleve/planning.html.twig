{% extends 'base.html.twig' %}

{% block title %}CFPI | Calendrier{% endblock %}

{% block stylesheets %}
    <link href="{{ asset('css/cssPlanning.css') }}" rel="stylesheet" />
    <link href="{{ asset('css/css.css') }}" rel="stylesheet" />
    <link href="{{ asset('css/planning.css') }}" rel="stylesheet" />
    <link rel="icon" type="image/x-icon" href="{{ asset('images/favicon.ico') }}">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet' />
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
{% endblock %}

{% block body %}
    <nav class="sidebar close">
        <header>
            <div class="image-text">
                <span class="image">
                    <img src="{{ asset('images/logo.png') }}" alt="" id="logo">
                </span>

                <div class="text logo-text">
                    <span class="name">CFPI</span>
                    <span class="profession">Planning</span>
                </div>
            </div>

            <i class='bx bx-chevron-right toggle'></i>
        </header>

        <div class="menu-bar">
            <div class="menu">

                <li class="search-box">
                    <i class='bx bx-search icon'></i>
                    <input type="text" placeholder="Search...">
                </li>

                <ul class="menu-links">
                    <li class="nav-link" id="planning">
                        <a href="planning.html">
                            <i class='bx bx-calendar icon' ></i>
                            <span class="text nav-text">Planning</span>
                        </a>
                    </li>

                    <li class="nav-link">
                        <a href="{{ path('app_logout') }}">
                            <i class='bx bx-user icon' ></i>
                            <span class="text nav-text">Utilisateurs</span>
                        </a>
                    </li>

                </ul>
            </div>

            <div class="bottom-content">
                <li class="">
                    <a href="{{ path('app_logout') }}" id="deconnexion">
                        <i class='bx bx-log-out icon' ></i>
                        <span class="text nav-text">Se déconnecter</span>
                    </a>
                </li>

                <li class="mode">
                    <div class="sun-moon">
                        <i class='bx bx-moon icon moon'></i>
                        <i class='bx bx-sun icon sun'></i>
                    </div>
                    <span class="mode-text text">Dark mode</span>

                    <div class="toggle-switch">
                        <span class="switch"></span>
                    </div>
                </li>

            </div>
        </div>

    </nav>

    <section class="home">
        <div id="calendrier">

        </div>
        <div class="modal-container" id="modal_container_event_selected">
            <div class="modal">
                <h1 id="titre"></h1>
                <p id="description"></p>
                <button id="modifier">
                    Modifier l'événement
                </button>
                <button id="supprimer">
                    Supprimer l'événement
                </button>
                <button id="closeEventSelect">
                    Fermer
                </button>
            </div>
        </div>
        <div class="modal-container" id="modal_container_grid_selected">
            <div class="modal">
                <h1 id="titre">Ajouter événement</h1>
                <br>
                <label for="title">Choisir la matière:</label>
                <select name="title" id="title" required>
                    <option value="">--Choisir la matière--</option>
                    <option value="Comunication : COM">Comunication : COM</option>
                    <option value="GESTION">GESTION</option>
                    <option value="Droit info : DTINFO">Droit info : DTINFO</option>
                </select>
                <br>
                <input type="text" id="descriptionForm" value="DESCARTES Mélanie" required>
                <input type="text" id="emailForm" value="m.descartes@limayrac.fr" required>
                <br>
                <label for="start">Veuillez choisir une date et une heure de début :</label>
                <input id="start" type="datetime-local" name="start" required>
                <br>
                <label for="end">Veuillez choisir une date et une heure de fin :</label>
                <input id="end" type="datetime-local" name="end" required>
                <br>
                <label for="allDay">Toute la journée :</label>
                <input id="allDay" type="checkbox" name="allDay">
                <br>
                <input type="text" id="backgroundColor" value="#000000" required>
                <input type="text" id="borderColor" value="#000000" required>
                <input type="text" id="textColor" value="#FFFFFF" required>
                <br>
                <button id="ajouter">Ajouter l'événement</button>
                <button id="closeGridSelect">
                    Fermer
                </button>
            </div>
        </div>
        <div class="modal-container" id="modal_container_modification_form">
            <div class="modal">
                <h1 id="titre">Modifier événement</h1>
                <br>
                <label for="modificationFormTitle">Choisir la matière:</label>
                <select name="modificationFormTitle" id="modificationFormTitle" required>
                    <option value="">--Choisir la matière--</option>
                    <option value="Comunication : COM">Comunication : COM</option>
                    <option value="GESTION">GESTION</option>
                    <option value="Droit info : DTINFO">Droit info : DTINFO</option>
                </select>
                <br>
                <input type="text" id="modificationFormDescription" value="DESCARTES Mélanie" required>
                <br>
                <label for="modificationFormStart">Veuillez choisir une date et une heure de début :</label>
                <input id="modificationFormStart" type="datetime-local" name="start" required>
                <br>
                <label for="modificationFormEnd">Veuillez choisir une date et une heure de fin :</label>
                <input id="modificationFormEnd" type="datetime-local" name="end" required>
                <br>
                <label for="modificationFormAllDay">Toute la journée :</label>
                <input id="modificationFormAllDay" type="checkbox" name="allDay">
                <br>
                <input type="text" id="modificationFormBackgroundColor" value="#000000" required>
                <input type="text" id="modificationFormBorderColor" value="#000000" required>
                <input type="text" id="modificationFormTextColor" value="#FFFFFF" required>
                <br>
                <button id="modifierEvent">Modifier l'événement</button>
                <button id="closeModificationForm">
                    Fermer
                </button>
            </div>
        </div>
        <div class="modal-container" id="modal_container_event_click">
            <div class="container">
                <div class="forms">
                    <div class="form login">
                        <span class="title">Modifier événement</span>
                        <form action="#" id="form">
                            <div class="input-field">
                                <input type="text" placeholder="Titre événement" required id="modal_container_event_click_titre">
                                <i class="uil uil-text-fields"></i>
                            </div>
                            <input type="hidden" required id="password">
                            <div class="input-field">
                                <select name="roles" id="roles">
                                    <option value="" class="placeholder">Rôle</option>
                                    <option value="ROLE_SECRETAIRE,ROLE_USER">Secretaire</option>
                                    <option value="ROLE_INTERVENANT,ROLE_USER">Intervenant</option>
                                    <option value="ROLE_ETUDIANT,ROLE_USER">Etudiant</option>
                                </select>
                                <i class="uil uil-shield"></i>
                            </div>
                            <div class="input-field" id="matieres">
                                <input type="text" placeholder="Matières" required id="matiereValue" class="matieresV">
                                <i class="uil uil-graduation-cap"></i>
                                <i class="uil uil-plus-circle plus"></i>
                            </div>
                            <div class="input-field button">
                                <input type="button" value="Enregistrer" id="enregistrer">
                            </div>
                            <div class="input-field button">
                                <input type="button" value="Annuler" id="bouttonAnulerEdition">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('js/jquery.js') }}"></script>
    <script src="{{ asset('js/darkMode.js') }}"></script>
    <script src="{{ asset('js/modalPlanningSecretaire.js') }}"></script>
    <script src="{{ asset('js/formatageHeure.js') }}"></script>
    <script>
        window.onload = function(){

            let lastEventClicked;
            let lastStartTime;
            let lastEndTime;
            let lastAllDay;

            let ajouter = document.querySelector("#ajouter")

            let modal_container_event_selected = document.querySelector("#modal_container_event_selected")

            let modal_container_grid_selected = document.querySelector("#modal_container_grid_selected")

            let modal_container_modification_form = document.querySelector("#modal_container_modification_form")

            let titre = document.querySelector("#titre")
            let description = document.querySelector("#description")

            let modifier = document.querySelector("#modifier")
            let supprimer = document.querySelector("#supprimer")

            let modifierEvent = document.querySelector("#modifierEvent")
            let closeEventSelect = document.querySelector("#closeEventSelect")
            let closeGridSelect = document.querySelector("#closeGridSelect")
            let closeModificationForm = document.querySelector("#closeModificationForm")

            let calendarElt = document.querySelector("#calendrier")

            let calendar = new FullCalendar.Calendar(calendarElt, {
                initialView: 'timeGridWeek',
                locale: 'fr',
                timeZone: 'Europe/Paris',
                headerToolbar: {
                    start: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek'
                },
                events: {{ data|raw }},
                eventResizableFromStart: false,
                editable:false,
                selectable: false,
                selectOverlap: function(event) {
                }
            });

            calendar.on('select', (e) => {
                console.log("calendar.on('select')")
                console.log(e.startStr)
                //fetch(`/api/test/${e.startStr}`).then(res => console.log(res)).catch()
                //if (e)
                lastStartTime = e.startStr
                lastEndTime = e.endStr
                lastAllDay = e.allDay
                document.querySelector("#start").value = lastStartTime.slice(0,16)
                document.querySelector("#end").value = lastEndTime.slice(0,16)
                modal_container_grid_selected.classList.add('show')
            })

            ajouter.addEventListener('click', (e) => {
                let url = `/api/add`

                let donnees = {
                    "title": document.querySelector("#title").value,
                    "description": document.querySelector("#descriptionForm").value,
                    "email": document.querySelector("#emailForm").value,
                    "start": lastStartTime,
                    "end": lastEndTime,
                    "backgroundColor": document.querySelector("#backgroundColor").value,
                    "borderColor": document.querySelector("#borderColor").value,
                    "textColor": document.querySelector("#textColor").value,
                    "allDay": lastAllDay
                }
                console.log(donnees)
                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))

                modal_container_event_selected.classList.remove('show');
                location.reload();
                //calendar.refetchEvents()

            })

            calendar.on('eventChange', (e) => {
                console.log(e.event)
                let url = `/api/${e.event.id}/edit`
                let donnees = {
                    "title": e.event.title,
                    "description": e.event.extendedProps.description,
                    "start": e.event.start,
                    "end": e.event.end,
                    "backgroundColor": e.event.backgroundColor,
                    "borderColor": e.event.borderColor,
                    "textColor": e.event.textColor,
                    "allDay": e.event.allDay
                }
                console.log(donnees)
                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))
            })

            calendar.on('eventClick', (e) => {
                afficherModalContainerEventClick(e.event)
                /*if (e.event.extendedProps.en_fond == "auto") {
                    lastEventClicked = e
                    titre.innerHTML = e.event.title
                    description.innerHTML = e.event.extendedProps.description
                    modal_container_event_selected.classList.add('show');
                }*/
            })

            supprimer.addEventListener('click', (e) => {
                let url = `/api/${lastEventClicked.event.id}/delete`
                let donnees = {
                    "title": lastEventClicked.event.title,
                    "description": lastEventClicked.event.extendedProps.description,
                    "start": lastEventClicked.event.start,
                    "end": lastEventClicked.event.end,
                    "backgroundColor": lastEventClicked.event.backgroundColor,
                    "borderColor": lastEventClicked.event.borderColor,
                    "textColor": lastEventClicked.event.textColor,
                    "allDay": lastEventClicked.event.allDay
                }
                console.log(lastEventClicked)
                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))
                modal_container_event_selected.classList.remove('show');
                lastEventClicked.event.remove();
            })

            modifier.addEventListener('click', (e) => {
                // Enlever le modal de choix
                modal_container_event_selected.classList.remove('show');

                // Remplissage du formulaire de modification
                document.querySelector("#modificationFormTitle").value = lastEventClicked.event.title
                document.querySelector("#modificationFormDescription").value = lastEventClicked.event._def.extendedProps.description
                document.querySelector("#modificationFormStart").value = formaterHeure(lastEventClicked)
                document.querySelector("#modificationFormEnd").value = formaterHeure(lastEventClicked,false)
                document.querySelector("#modificationFormBackgroundColor").value = lastEventClicked.event.backgroundColor
                document.querySelector("#modificationFormBorderColor").value = lastEventClicked.event.borderColor
                document.querySelector("#modificationFormTextColor").value = lastEventClicked.event.textColor
                document.querySelector("#modificationFormAllDay").checked = lastEventClicked.event.allDay

                // Afficher le modal de modification
                modal_container_modification_form.classList.add('show');
            })

            /*
             * Sert a formatter les heures
             */
            /*function formaterHeure(HTMLScriptElement, start=true) {
                console.log(HTMLScriptElement.event.end.toString())
                let datetime_locale_format
                if (start===true && HTMLScriptElement.event.start !== null) {
                    datetime_locale_format = HTMLScriptElement.event.start.toString().split(" ")[3]+"-"
                    switch (HTMLScriptElement.event.start.toString().split(" ")[1]) {
                        case "Jan": datetime_locale_format += "01-";
                            break;
                        case "Feb": datetime_locale_format += "02-";
                            break;
                        case "Mar": datetime_locale_format += "03-";
                            break;
                        case "Apr": datetime_locale_format += "04-";
                            break;
                        case "May": datetime_locale_format += "05-";
                            break;
                        case "Jun": datetime_locale_format += "06-";
                            break;
                        case "Jul": datetime_locale_format += "07-";
                            break;
                        case "Aug": datetime_locale_format += "08-";
                            break;
                        case "Sep": datetime_locale_format += "09-";
                            break;
                        case "Oct": datetime_locale_format += "10-";
                            break;
                        case "Nov": datetime_locale_format += "11-";
                            break;
                        case "Dec": datetime_locale_format += "12-";
                            break;
                    }
                    if (parseInt(HTMLScriptElement.event.start.toString().split(" ")[4].split(":")[0],10)<11) {
                        datetime_locale_format += HTMLScriptElement.event.start.toString().split(" ")[2]+"T0"+(parseInt(HTMLScriptElement.event.start.toString().split(" ")[4].split(":")[0],10)-1).toString()+":"+HTMLScriptElement.event.start.toString().split(" ")[4].split(":")[1]
                    } else {
                        datetime_locale_format += HTMLScriptElement.event.start.toString().split(" ")[2]+"T"+(parseInt(HTMLScriptElement.event.start.toString().split(" ")[4].split(":")[0],10)-1).toString()+":"+HTMLScriptElement.event.start.toString().split(" ")[4].split(":")[1]
                    }
                } else if (start===false && HTMLScriptElement.event.end !== null) {
                    datetime_locale_format = HTMLScriptElement.event.end.toString().split(" ")[3]+"-"
                    switch (HTMLScriptElement.event.end.toString().split(" ")[1]) {
                        case "Jan": datetime_locale_format += "01-";
                            break;
                        case "Feb": datetime_locale_format += "02-";
                            break;
                        case "Mar": datetime_locale_format += "03-";
                            break;
                        case "Apr": datetime_locale_format += "04-";
                            break;
                        case "May": datetime_locale_format += "05-";
                            break;
                        case "Jun": datetime_locale_format += "06-";
                            break;
                        case "Jul": datetime_locale_format += "07-";
                            break;
                        case "Aug": datetime_locale_format += "08-";
                            break;
                        case "Sep": datetime_locale_format += "09-";
                            break;
                        case "Oct": datetime_locale_format += "10-";
                            break;
                        case "Nov": datetime_locale_format += "11-";
                            break;
                        case "Dec": datetime_locale_format += "12-";
                            break;
                    }
                    if (parseInt(HTMLScriptElement.event.end.toString().split(" ")[4].split(":")[0],10)<11) {
                        datetime_locale_format += HTMLScriptElement.event.end.toString().split(" ")[2]+"T0"+(parseInt(HTMLScriptElement.event.end.toString().split(" ")[4].split(":")[0],10)-1).toString()+":"+HTMLScriptElement.event.end.toString().split(" ")[4].split(":")[1]
                    } else {
                        datetime_locale_format += HTMLScriptElement.event.end.toString().split(" ")[2]+"T"+(parseInt(HTMLScriptElement.event.end.toString().split(" ")[4].split(":")[0],10)-1).toString()+":"+HTMLScriptElement.event.end.toString().split(" ")[4].split(":")[1]
                    }
                } else if (start===false && HTMLScriptElement.event.end === null) {
                    datetime_locale_format = ""
                }
                return datetime_locale_format
            }*/

            /*
             * Modification d'événement
             */
            modifierEvent.addEventListener('click', (e) => {
                let url = `/api/${lastEventClicked.event.id}/edit`
                let donnees = {
                    "title": document.querySelector("#modificationFormTitle").value,
                    "description": document.querySelector("#modificationFormDescription").value,
                    "start": document.querySelector("#modificationFormStart").value,
                    "end": document.querySelector("#modificationFormEnd").value,
                    "backgroundColor": document.querySelector("#modificationFormBackgroundColor").value,
                    "borderColor": document.querySelector("#modificationFormBorderColor").value,
                    "textColor": document.querySelector("#modificationFormTextColor").value,
                    "allDay": document.querySelector("#modificationFormAllDay").checked,
                }
                console.log(donnees);

                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))

                modal_container_modification_form.classList.remove('show');
                location.reload();
            })

            closeEventSelect.addEventListener('click', (e) => {
                modal_container_event_selected.classList.remove('show');
            })

            closeGridSelect.addEventListener('click', (e) => {
                modal_container_grid_selected.classList.remove('show');
            })

            closeModificationForm.addEventListener('click', (e) => {
                modal_container_modification_form.classList.remove('show');
            })

            calendar.render()

            let username = document.querySelector("#Nom")
            let mail = document.querySelector("#mail")
            let password = document.querySelector("#mdp")
            let role = document.querySelector("#role")

            let inscrire = document.querySelector("#inscrire")

            inscrire.addEventListener('click', (e) => {
                let donnees = {
                    "username": username.value,
                    "password": password.value,
                    "role": password.value,
                    "email": mail.value,
                }
                console.log(donnees);
                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))
            })
        }
    </script>
{% endblock %}